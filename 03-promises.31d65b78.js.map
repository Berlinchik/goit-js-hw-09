{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAwBA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACLN,EACFI,EAAI,CAAEN,WAAUC,UAEhBM,EAAI,CAAEP,WAAUC,S,GAEjBA,E,IAhCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAAAC,GAC9BA,EAAEC,iBACF,IAAMC,EAASC,OAAOH,EAAEI,OAAOF,OAAOG,OAChCC,EAAaH,OAAOH,EAAEI,OAAOf,MAAMgB,OACnCE,EAAOJ,OAAOH,EAAEI,OAAOG,KAAKF,OAElC,GAAIC,EAAa,GAAKC,EAAO,GAAKL,EAAS,EACzC,OAAOjB,EAAAuB,OAAOC,QAAQ,qDAExB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAQQ,IAAK,CAE/BvB,EAAcuB,EAAI,EADNJ,EAAaC,EAAOG,GAE7BC,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBJ,EAAAuB,OAAOK,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M,IAE9D0B,OAAM,SAAAH,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBJ,EAAAuB,OAAOC,QAAQ,sBAAqCK,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const amount = Number(e.target.amount.value);\n  const firstDelay = Number(e.target.delay.value);\n  const step = Number(e.target.step.value);\n\n  if (firstDelay < 0 || step < 0 || amount < 0) {\n    return Notify.failure('The values in the fields must be positive numbers');\n  }\n  for (let i = 0; i < amount; i++) {\n    let delay = firstDelay + step * i;\n    createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","document","querySelector","addEventListener","e","preventDefault","amount","Number","target","value","firstDelay","step","Notify","failure","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.31d65b78.js.map"}